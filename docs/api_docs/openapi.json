{
    "openapi": "3.0.1",
    "info": {
        "title": "Cloud Compete Graph",
        "description": "API for the Cloud Compete Graph",
        "version": "1.0"
    },
    "servers": [{
        "url": "https://cloudcompetegraph.azure-api.net"
    }],
    "paths": {
        "/ner/v1/extract": {
            "post": {
                "summary": "Extract cloud services from document text as Named Entities",
                "description": "Extract cloud services from document text as Named Entities",
                "operationId": "post-extract",
                "tags": ["Named Entity Recognition"],
                "requestBody": {
                    "description": "List of documents",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentsRequest"
                            },
                            "example": {
                                "documents": [
                                    {
                                        "id": "1",
                                        "text": "Create serverless logic with Azure Functions and event hubs",
                                        "language": "en"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cloud services extracted from text",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ner/v1/extract_async": {
            "post": {
                "tags": ["Named Entity Recognition", "Async"],
                "summary": "Extract Async Post",
                "description": "Run extraction for batch of documents in the background",
                "operationId": "extract_async_extract_async_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentsRequest"
                            },
                            "example": {
                                "documents": [
                                    {
                                        "id": "1",
                                        "text": "Create serverless logic with Azure Functions and event hubs",
                                        "language": "en"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncStatusDocumentsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ner/v1/status": {
            "get": {
                "tags": ["Named Entity Recognition", "Async"],
                "summary": "Request Status Get",
                "description": "Get the status of an async extraction.",
                "operationId": "request_status_status_get",
                "parameters": [{
                    "name": "request_id",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncStatusDocumentsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ner/v1/azure_cognitive_search": {
            "post": {
                "tags": ["Named Entity Recognition", "Azure Search"],
                "summary": "Extract For Azure Search Post",
                "description": "Extract Cloud Services for each document in an Azure Search Index.\n    This route can be configured directly as a Cognitive Skill in Azure Search",
                "operationId": "extract_for_azure_search_azure_cognitive_search_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureSearchDocumentsRequest"
                            },
                            "example": {
                                "values": [
                                    {
                                        "recordId": "1",
                                        "data": {
                                            "text": "Create serverless logic with Azure Functions and event hubs",
                                            "language": "en"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AzureSearchDocumentsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/clouds": {
            "get": {
                "description": "Get all cloud providers",
                "operationId": "get-cloudshttptrigger",
                "summary": "GET Clouds",
                "tags": ["API"],
                "responses": {
                    "200": {
                        "description": "Returns all cloud providers."
                    }
                }
            }
        },
        "/v1/categories": {
            "get": {
                "description": "Get all categories.",
                "operationId": "get-categorieshttptrigger",
                "summary": "GET Categories",
                "tags": ["API"],
                "parameters": [{
                    "name": "cloud_id",
                    "in": "query",
                    "description": "Cloud Provider id",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Returns all categories."
                    }
                }
            }
        },
        "/v1/services": {
            "get": {
                "description": "GET Services by cloud_id or category_id",
                "operationId": "5c5423127dafdb8c02157394",
                "summary": "GET Services",
                "tags": ["API"],
                "parameters": [{
                    "name": "cloud_id",
                    "in": "query",
                    "description": "Cloud Provider id",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "category_id",
                    "in": "query",
                    "description": "Cloud Provider Category id",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Returns the service metadata."
                    }
                }
            }
        },
        "/v1/services/{service_id}": {
            "get": {
                "description": "GET Services",
                "operationId": "get-serviceshttptrigger",
                "summary": "GET Service By Id",
                "tags": ["API"],
                "parameters": [{
                    "name": "service_id",
                    "in": "path",
                    "description": "Id of a cloud service",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Returns the service metadata."
                    }
                }
            }
        },
        "/v1/search": {
            "get": {
                "description": "Gets cloud services from a search query. This api allows a pass through to Azure Search, for query information see the Azure Search docs: https://docs.microsoft.com/en-us/rest/api/searchservice/search-documents",
                "operationId": "get-services-search",
                "summary": "Search",
                "tags": ["Search"],
                "parameters": [{
                    "name": "search",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "$skip",
                    "in": "query",
                    "schema": {
                        "type": "integer"
                    }
                }, {
                    "name": "$top",
                    "in": "query",
                    "schema": {
                        "type": "integer"
                    }
                }, {
                    "name": "$filter",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "facet",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "$select",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "$count",
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "enum": ["true", "false"]
                    }
                }, {
                    "name": "highlight",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "highlightPreTag",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "highlightPostTag",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "api-version",
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "enum": ["2017-11-11"]
                    }
                }, {
                    "name": "searhFields",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "searchMode",
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "enum": ["full", "simple"]
                    }
                }, {
                    "name": "queryType",
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "enum": ["full", "simple"]
                    }
                }, {
                    "name": "$orderby",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "scoringProfile",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "scoringParameter",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "minimumCoverage",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Returns search results."
                    }
                }
            }
        },
        "/v1/suggest": {
            "get": {
                "description": "Suggest search terms based on a partial search query that you can use for the endpoint",
                "operationId": "search-suggestions",
                "summary": "Search Suggestions",
                "tags": ["Search"],
                "parameters": [{
                    "name": "search",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Returns search term suggestions."
                    }
                }
            }
        },
        "/v1/gremlin": {
            "post": {
                "description": "POST Gremlin Query",
                "operationId": "post-gremlinqueryhttptrigger",
                "summary": "POST Gremlin Query",
                "tags": ["Query"],
                "requestBody": {
                    "description": "Gremlin Query",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GremlinQueryRequest"
                            },
                            "example": {
                                "query": "g.V('ad77902d-10f7-4d3e-971c-8b734a059076')"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the JSON result of your Gremlin query."
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "GremlinQueryRequest": {
                "required": ["query"],
                "type": "object",
                "properties": {
                    "query": {
                        "type": "string"
                    }
                }
            },
            "AzureSearchDocumentDataRequest": {
                "title": "AzureSearchDocumentDataRequest",
                "required": ["text"],
                "type": "object",
                "properties": {
                    "text": {
                        "title": "Text",
                        "type": "string"
                    },
                    "language": {
                        "title": "Language",
                        "type": "string",
                        "default": "en"
                    }
                }
            },
            "AzureSearchDocumentRequest": {
                "title": "AzureSearchDocumentRequest",
                "required": ["recordId", "data"],
                "type": "object",
                "properties": {
                    "recordId": {
                        "title": "Recordid",
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/AzureSearchDocumentDataRequest"
                    }
                }
            },
            "AsyncStatusDocumentsResponse": {
                "title": "AsyncStatusDocumentsResponse",
                "required": ["request_id", "status"],
                "type": "object",
                "properties": {
                    "request_id": {
                        "title": "Request_Id",
                        "type": "string"
                    },
                    "status": {
                        "title": "Status",
                        "enum": ["Completed", "Running", "Failed"],
                        "type": "string"
                    },
                    "result": {
                        "$ref": "#/components/schemas/DocumentsResponse"
                    }
                }
            },
            "EntityMatch": {
                "title": "EntityMatch",
                "required": ["label", "text", "start", "end"],
                "type": "object",
                "properties": {
                    "label": {
                        "title": "Label",
                        "type": "string"
                    },
                    "text": {
                        "title": "Text",
                        "type": "string"
                    },
                    "start": {
                        "title": "Start",
                        "type": "integer"
                    },
                    "end": {
                        "title": "End",
                        "type": "integer"
                    },
                    "relation": {
                        "title": "Relation",
                        "type": "string"
                    },
                    "rootVerb": {
                        "title": "Rootverb",
                        "type": "string"
                    }
                }
            },
            "AzureSearchDocumentDataResponse": {
                "title": "AzureSearchDocumentDataResponse",
                "required": ["cloudServices"],
                "type": "object",
                "properties": {
                    "cloudServices": {
                        "title": "Cloudservices",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "DocumentRequest": {
                "title": "DocumentRequest",
                "required": ["id", "text"],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "text": {
                        "title": "Text",
                        "type": "string"
                    },
                    "language": {
                        "title": "Language",
                        "type": "string",
                        "default": "en"
                    }
                }
            },
            "DocumentsRequest": {
                "title": "DocumentsRequest",
                "required": ["documents"],
                "type": "object",
                "properties": {
                    "documents": {
                        "title": "Documents",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocumentRequest"
                        }
                    }
                }
            },
            "AzureSearchDocumentsRequest": {
                "title": "AzureSearchDocumentsRequest",
                "required": ["values"],
                "type": "object",
                "properties": {
                    "values": {
                        "title": "Values",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AzureSearchDocumentRequest"
                        }
                    }
                }
            },
            "CloudServiceEntity": {
                "title": "CloudServiceEntity",
                "required": ["matches", "serviceId", "serviceName", "serviceShortDescription", "serviceLongDescription", "serviceUri", "serviceIconUri", "serviceCloud", "serviceCategories", "relatedServices"],
                "type": "object",
                "properties": {
                    "matches": {
                        "title": "Matches",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EntityMatch"
                        }
                    },
                    "serviceId": {
                        "title": "Serviceid",
                        "type": "string"
                    },
                    "serviceName": {
                        "title": "Servicename",
                        "type": "string"
                    },
                    "serviceShortDescription": {
                        "title": "Serviceshortdescription",
                        "type": "string"
                    },
                    "serviceLongDescription": {
                        "title": "Servicelongdescription",
                        "type": "string"
                    },
                    "serviceUri": {
                        "title": "Serviceuri",
                        "type": "string"
                    },
                    "serviceIconUri": {
                        "title": "Serviceiconuri",
                        "type": "string"
                    },
                    "serviceCloud": {
                        "title": "Servicecloud",
                        "type": "string"
                    },
                    "serviceCategories": {
                        "title": "Servicecategories",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "relatedServices": {
                        "title": "Relatedservices",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "AzureSearchDocumentResponse": {
                "title": "AzureSearchDocumentResponse",
                "required": ["recordId", "data"],
                "type": "object",
                "properties": {
                    "recordId": {
                        "title": "Recordid",
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/AzureSearchDocumentDataResponse"
                    },
                    "errors": {
                        "title": "Errors",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "warnings": {
                        "title": "Warnings",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "AzureSearchDocumentsResponse": {
                "title": "AzureSearchDocumentsResponse",
                "required": ["values"],
                "type": "object",
                "properties": {
                    "values": {
                        "title": "Values",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AzureSearchDocumentResponse"
                        }
                    }
                }
            },
            "DocumentResponse": {
                "title": "DocumentResponse",
                "required": ["id", "cloudServices"],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "cloudServices": {
                        "title": "Cloudservices",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudServiceEntity"
                        }
                    }
                }
            },
            "DocumentsResponse": {
                "title": "DocumentsResponse",
                "required": ["documents"],
                "type": "object",
                "properties": {
                    "documents": {
                        "title": "Documents",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocumentResponse"
                        }
                    }
                }
            },
            "ValidationError": {
                "title": "ValidationError",
                "required": ["loc", "msg", "type"],
                "type": "object",
                "properties": {
                    "loc": {
                        "title": "Location",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "msg": {
                        "title": "Message",
                        "type": "string"
                    },
                    "type": {
                        "title": "Error Type",
                        "type": "string"
                    }
                }
            },
            "HTTPValidationError": {
                "title": "HTTPValidationError",
                "type": "object",
                "properties": {
                    "detail": {
                        "title": "Detail",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        }
                    }
                }
            },
            "ExtractAsyncPostRequest": {
                "title": "DocumentsRequest",
                "required": ["documents"],
                "type": "object",
                "properties": {
                    "documents": {
                        "title": "Documents",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocumentsRequest"
                        }
                    }
                },
                "example": {
                    "documents": [{
                        "id": 1,
                        "text": "Create serverless logic with Azure Functions",
                        "language": "en"
                    }]
                }
            }
        }
    }
}